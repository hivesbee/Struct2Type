name: Deploy

on:
  push:
    branches:
      - master

jobs:
  build_wasm:
    name: Build WASM
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          GOOS=js GOARCH=wasm go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: |
          cd wasm
          GOOS=js GOARCH=wasm go build -o main.wasm

      - name: Upload WASM file
        uses: actions/upload-artifact@v1
        with:
          name: wasm
          path: ./wasm/main.wasm


  build_react_app:
    name: Build React App
    runs-on: ubuntu-latest
    needs: build_wasm

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout master branch
        uses: actions/checkout@v1

      - name: Download WASM file
        uses: actions/download-artifact@v1
        with:
          name: wasm

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: yarn install, build, and test
        run: |
          cp -pr ./wasm/main.wasm ./front/public
          cd front
          yarn install
          yarn run export
          # npm test
        env:
          CI: false

      - name: Upload build directory
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build

  deploy_to_netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: build_react_app

    steps:
      - name: Download build directory
        uses: actions/download-artifact@v1
        with:
          name: build

      - name: Deploy
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NetlifyAuthToken }}
          NETLIFY_SITE_ID: ${{ secrets.NetlifySiteId }}
        with:
          args: deploy -p -d ./front/out
